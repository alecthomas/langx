// Code generated by "stringer -linecomment -type Op"; DO NOT EDIT.

package parser

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OpModAsgn-0]
	_ = x[OpGe-1]
	_ = x[OpLe-2]
	_ = x[OpAnd-3]
	_ = x[OpOr-4]
	_ = x[OpEq-5]
	_ = x[OpNe-6]
	_ = x[OpAddAsgn-7]
	_ = x[OpSubAsgn-8]
	_ = x[OpMulAsgn-9]
	_ = x[OpDivAsgn-10]
	_ = x[OpPowAsgn-11]
	_ = x[OpSub-12]
	_ = x[OpAsgn-13]
	_ = x[OpAdd-14]
	_ = x[OpMul-15]
	_ = x[OpDiv-16]
	_ = x[OpLt-17]
	_ = x[OpGt-18]
	_ = x[OpMod-19]
	_ = x[OpPow-20]
	_ = x[OpNot-21]
}

const _Op_name = "%=>=<=&&||==!=+=-=*=/=^=-=+*/<>%^!"

var _Op_index = [...]uint8{0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34}

func (i Op) String() string {
	if i < 0 || i >= Op(len(_Op_index)-1) {
		return "Op(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Op_name[_Op_index[i]:_Op_index[i+1]]
}
